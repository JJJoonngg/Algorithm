/*
https://www.acmicpc.net/problem/10816
문제
숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다.
정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이가 주어진다.
둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다. 넷째 줄에는 상근이가 몇 개 가지고 있는 숫자 카드인지 구해야 할 M개의 정수가 주어지며,
이 수는 공백으로 구분되어져 있다. 이수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.
10
6 3 2 10 10 10 -10 -10 7 3
8
10 9 -5 2 3 4 5 -10
출력
첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 몇 개 가지고 있는지를 공백으로 구분해 출력한다.
3 0 0 1 2 0 0 2

알고리즘 분류 : 이분탐색
*/
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int main() {
	std::ios::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	int n; cin >> n;
	vector<int> v;
	vector<pair<int, int>> ans;
	for (int i = 0; i < n; i++) {
		int tmp; cin >> tmp;
		v.push_back(tmp);
	}
	sort(v.begin(), v.end());
	ans.push_back(make_pair(v[0], 1));
	int idx = 0;
	for (int i = 1; i < v.size(); i++) {
		if (v[i] == ans[idx].first) ans[idx].second++;
		else {
			ans.push_back(make_pair(v[i], 1));
			idx++;
		}
	}
	int m; cin >> m;
	for (int i = 0; i < m; i++) {
		int tmp; cin >> tmp;
		int start = 0, end = ans.size() - 1;
		bool check = false;
		int res = 0;
		while (start <= end) {
			int mid = (start + end) / 2;
			if (ans[mid].first == tmp) {
				check = true;
				res = ans[mid].second;
				break;
			}
			else if (ans[mid].first > tmp) end = mid - 1;
			else start = mid + 1;
		}
		if (check) cout << res << " ";
		else cout << "0 ";
	}
	cout << "\n";
}