/*
https://www.acmicpc.net/problem/2696
문제
어떤 수열을 읽고, 홀수번째 수를 읽을 때 마다, 지금까지 입력받은 값의 중앙값을 출력하는 프로그램을 작성하시오.
예를 들어, 수열이 1,5,4,3,2 이면, 홀수번째 수는 1번째 수, 3번째 수, 5번째 수이고, 
1번째 수를 읽었을 때 중앙값은 1, 3번째 수를 읽었을 때는 4, 5번째 수를 읽었을 때는 3이다.

입력
첫째 줄에 테스트 케이스의 개수 T(1<=T<=1,000)가 주어진다. 각 테스트 케이스의 첫째 줄에는 수열의 크기 M(1<=M<=9999, M=홀수)이 주어지고, 
그 다음 줄부터 이 수열의 원소가 차례대로 주어진다. 원소는 한 줄에 10개씩 나누어져있고, 32비트 부호있는 정수이다. (대부분의 언어에서 int)
3
9
1 2 3 4 5 6 7 8 9
9
9 8 7 6 5 4 3 2 1
23
23 41 13 22 -3 24 -31 -11 -8 -7
3 5 103 211 -311 -45 -67 -73 -81 -99
-33 24 56
출력
각 테스트 케이스에 대해 첫째 줄에 출력하는 중앙값의 개수를 출력하고, 
둘째 줄에는 홀수 번째 수를 읽을 때 마다 구한 중앙값을 차례대로 공백으로 구분하여 출력한다. 
이때, 한 줄에 10개씩 출력해야 한다.
5
1 2 3 4 5
5
9 8 7 6 5
12
23 23 22 22 13 3 5 5 3 -3
-7 -3
*/
#include <iostream>
#include <queue>
#include <functional>
using namespace std;
int main() {
	std::ios::sync_with_stdio(false);
	cin.tie(NULL); cout.tie(NULL);
	int t; cin >> t;
	while (t--) {
		int n = 0;
		cin >> n;
		cout << (n + 1) / 2 << "\n";
		priority_queue <int, vector<int>, greater<int>> minHeap;
		priority_queue<int> maxHeap;
		for (int i = 1, idx = 0; i <= n; i++) {
			int tmp; cin >> tmp;
			if (minHeap.size() == maxHeap.size()) {
				if (minHeap.empty()) {
					maxHeap.push(tmp);
				}
				else {
					if (minHeap.top() <= tmp) {
						int a = minHeap.top();
						minHeap.pop();
						minHeap.push(tmp);
						tmp = a;
					}
					maxHeap.push(tmp);
				}
			}
			else {
				if (maxHeap.top() > tmp) {
					int a = maxHeap.top();
					maxHeap.pop();
					maxHeap.push(tmp);
					tmp = a;
				}
				minHeap.push(tmp);
			}
			if (minHeap.size() != maxHeap.size()) {
				cout << maxHeap.top() << " ";
				idx++;
				if (!(idx % 10)) {cout << "\n";	idx = 0;}
			}
		}
		cout << "\n";
	}
}