/*
문제
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.
1.X가 3으로 나누어 떨어지면, 3으로 나눈다.
2.X가 2로 나누어 떨어지면, 2로 나눈다.
3.1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최소값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 10^6보다 작거나 같은 자연수 N이 주어진다.
2
10

출력
첫째 줄에 연산을 하는 횟수의 최소값을 출력한다.
1
3

힌트
10의 경우에 10 -> 9 -> 3 -> 1 로 3번 만에 만들 수 있다.
*/
#include <iostream>
using namespace std;
int main() {
	int N;
	cin >> N;
	int* count = new int[N + 1];
	count[1] = 0;
	
	for (int i = 2; i <= N; i++) {
		count[i] = count[i - 1] + 1;
		if (i % 2 == 0 && count[i] > count[i / 2] + 1)
			count[i] = count[i / 2] + 1;
		if (i % 3 == 0 && count[i] > count[i / 3] + 1)
			count[i] = count[i / 3] + 1;
	}
	cout << count[N] << endl;
	delete[] count;
	return 0;
}